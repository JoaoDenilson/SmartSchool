// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.Data;

namespace SmartSchool.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220127121446_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0");

            modelBuilder.Entity("SmartSchool.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tecnologia da Informação"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sistemas de Informação"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ciência da Computação"
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PrerequisiteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Workload")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("PrerequisiteId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Disciplines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 3,
                            Name = "Matemática",
                            TeacherId = 1,
                            Workload = 0
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Name = "Física",
                            TeacherId = 2,
                            Workload = 0
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 1,
                            Name = "Português",
                            TeacherId = 3,
                            Workload = 0
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 1,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 6,
                            CourseId = 2,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 7,
                            CourseId = 3,
                            Name = "Inglês",
                            TeacherId = 4,
                            Workload = 0
                        },
                        new
                        {
                            Id = 8,
                            CourseId = 1,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 9,
                            CourseId = 2,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        },
                        new
                        {
                            Id = 10,
                            CourseId = 3,
                            Name = "Programação",
                            TeacherId = 5,
                            Workload = 0
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 214, DateTimeKind.Local).AddTicks(9604),
                            LastName = "Kent",
                            Name = "Marta",
                            Phone = "33225555",
                            RegistrationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(979),
                            LastName = "Isabela",
                            Name = "Paula",
                            Phone = "3354288",
                            RegistrationId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1024),
                            LastName = "Antonia",
                            Name = "Laura",
                            Phone = "55668899",
                            RegistrationId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1029),
                            LastName = "Maria",
                            Name = "Luiza",
                            Phone = "6565659",
                            RegistrationId = 4
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1032),
                            LastName = "Machado",
                            Name = "Lucas",
                            Phone = "565685415",
                            RegistrationId = 5
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1038),
                            LastName = "Alvares",
                            Name = "Pedro",
                            Phone = "456454545",
                            RegistrationId = 6
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            DateBirth = new DateTime(2005, 5, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1041),
                            LastName = "José",
                            Name = "Paulo",
                            Phone = "9874512",
                            RegistrationId = 7
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.StudentCourse", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CourseId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentsCourses");
                });

            modelBuilder.Entity("SmartSchool.Models.StudentDiscipline", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DisciplineId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<int?>("FinalGrade")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "DisciplineId");

                    b.HasIndex("DisciplineId");

                    b.ToTable("StudentsDiscipline");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 2,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(1892)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 4,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2324)
                        },
                        new
                        {
                            StudentId = 1,
                            DisciplineId = 5,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2346)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 1,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2348)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 2,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2349)
                        },
                        new
                        {
                            StudentId = 2,
                            DisciplineId = 5,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2353)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 1,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2354)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 2,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2355)
                        },
                        new
                        {
                            StudentId = 3,
                            DisciplineId = 3,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2356)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 1,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2358)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 4,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2359)
                        },
                        new
                        {
                            StudentId = 4,
                            DisciplineId = 5,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2361)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 4,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2362)
                        },
                        new
                        {
                            StudentId = 5,
                            DisciplineId = 5,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2363)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 1,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2364)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 2,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2365)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 3,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2366)
                        },
                        new
                        {
                            StudentId = 6,
                            DisciplineId = 4,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2369)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 1,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2370)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 2,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2371)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 3,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2372)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 4,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2373)
                        },
                        new
                        {
                            StudentId = 7,
                            DisciplineId = 5,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 215, DateTimeKind.Local).AddTicks(2374)
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<int>("RegistrationId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 212, DateTimeKind.Local).AddTicks(5060),
                            LastName = "Oliveira",
                            Name = "Lauro",
                            RegistrationId = 1
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 213, DateTimeKind.Local).AddTicks(4204),
                            LastName = "Soares",
                            Name = "Roberto",
                            RegistrationId = 2
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 213, DateTimeKind.Local).AddTicks(4241),
                            LastName = "Marconi",
                            Name = "Ronaldo",
                            RegistrationId = 3
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 213, DateTimeKind.Local).AddTicks(4243),
                            LastName = "Carvalho",
                            Name = "Rodrigo",
                            RegistrationId = 4
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            DateStart = new DateTime(2022, 1, 27, 9, 14, 46, 213, DateTimeKind.Local).AddTicks(4244),
                            LastName = "Montanha",
                            Name = "Alexandre",
                            RegistrationId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool.Models.Discipline", b =>
                {
                    b.HasOne("SmartSchool.Models.Course", "Course")
                        .WithMany("Disciplines")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Discipline", "Prerequisite")
                        .WithMany()
                        .HasForeignKey("PrerequisiteId");

                    b.HasOne("SmartSchool.Models.Teacher", "Teacher")
                        .WithMany("Disciplines")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.Models.StudentCourse", b =>
                {
                    b.HasOne("SmartSchool.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool.Models.StudentDiscipline", b =>
                {
                    b.HasOne("SmartSchool.Models.Discipline", "Discipline")
                        .WithMany("StudentsDiscipline")
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool.Models.Student", "Student")
                        .WithMany("StudentsDiscipline")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
